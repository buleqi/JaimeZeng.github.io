{"title":"文本处理命令 grep","uid":"a2787fdbc6396b9d6a932d66753ffcfb","slug":"2020-10-03-05_文本处理 grep","date":"2020-10-03T11:23:26.000Z","updated":"2021-09-02T22:41:49.931Z","comments":true,"path":"api/articles/2020-10-03-05_文本处理 grep.json","keywords":null,"cover":null,"content":"<h2 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h2><p>grep 是”<code>Global Regular Expressions Print</code>“的首字母缩写词，意为全局正则表达式打印。grep 是一个逐行扫描指定文件或文件的程序，返回包含模式的行。模式是一种表达式，它通过将字符解释为元字符来指定一组字符串。例如，星号元字符（*）被解释为”前面元素的零个或多个”。这使用户能够在 grep 命令中键入一系列短字符和元字符，以使计算机向我们显示哪些文件匹配的行。</p>\n<h3 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h3><p>|        | 语法                                    |<br>| —— | ————————————— | ———————— |<br>| 第一种 | <code>grep [option] [pattern] [file1,file2]</code> |<br>| 第二种 | <code>command                                | grep [option] [pattren]</code> |</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><table>\n<thead>\n<tr>\n<th>选项</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-v</code></td>\n<td>不显示匹配行信息</td>\n</tr>\n<tr>\n<td><code>-i</code></td>\n<td>搜索时忽略大小写</td>\n</tr>\n<tr>\n<td><code>-n</code></td>\n<td>显示行号</td>\n</tr>\n<tr>\n<td><code>-r</code></td>\n<td>递归搜素</td>\n</tr>\n<tr>\n<td><code>-E</code></td>\n<td>支持扩展正则表达式</td>\n</tr>\n<tr>\n<td><code>-F</code></td>\n<td>不按正则表达式匹配，按照字符串字面意思匹配</td>\n</tr>\n<tr>\n<td><code>-c</code></td>\n<td>只显示匹配行总数，不显示具体内容</td>\n</tr>\n<tr>\n<td><code>-w</code></td>\n<td>匹配整词</td>\n</tr>\n<tr>\n<td><code>-x</code></td>\n<td>匹配整行</td>\n</tr>\n<tr>\n<td><code>-l</code></td>\n<td>只显示文件名，不显示匹配行内容</td>\n</tr>\n<tr>\n<td><code>-s</code></td>\n<td>不显示错误信息</td>\n</tr>\n</tbody></table>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><h4 id=\"测试脚本\"><a href=\"#测试脚本\" class=\"headerlink\" title=\"测试脚本\"></a>测试脚本</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#!&#x2F;usr&#x2F;bin&#x2F;env bash\nPATH&#x3D;&#x2F;bin:&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:~&#x2F;bin\nexport PATH\n\n# grep 练习\n\nfilepath&#x3D;$(\n    cd &quot;$(dirname &quot;$0&quot;)&quot;\n    pwd\n)\ntestpath&#x3D;&quot;$&#123;filepath&#125;&#x2F;test_dir&quot;\nGreen_font_prefix&#x3D;&quot;\\033[32m&quot; &amp;&amp; Red_font_prefix&#x3D;&quot;\\033[31m&quot; &amp;&amp; Green_background_prefix&#x3D;&quot;\\033[42;37m&quot; &amp;&amp; Red_background_prefix&#x3D;&quot;\\033[41;37m&quot; &amp;&amp; Font_color_suffix&#x3D;&quot;\\033[0m&quot;\n\nfunction test_grep() &#123;\n    mkdir -p $&#123;testpath&#125; &amp;&amp; cd $&#123;testpath&#125;\n    # 将 man 文档分割成数个文件，每个文件 20 行\n    split &#x2F;etc&#x2F;man_db.conf -d -a 2 -l 20 man_db_\n\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 查找当前目录下的所有文件 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; find $&#123;filepath&#125; -type f -exec ls -la &#123;&#125; \\;\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_00 文件中查找包含 man 字段的行 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep man man_db_00\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_00 文件中查找包含 man 字段的行(不区分大小写) ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -i man man_db_00\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_00 文件中查找不包含 man 字段的行(反向查找) ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -v man man_db_00\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_00 文件中查找包含 man 字段的行并显示行号 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -n man man_db_00\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_01 文件中查找符合正则表达式 *PATH* 的行并显示行号 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -n &quot;*PATH*&quot; man_db_01\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_01 文件中查找符合 *PATH* 的行并显示行号(不按照正则表达式匹配) ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -n -F &quot;*PATH*&quot; man_db_01\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_01 文件中查找符合扩展正则表达式 man|MAN 的行并显示行号 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -n -E &quot;man|MAN&quot; man_db_01\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_01 文件中查找符合扩展正则表达式 man|MAN 的行总数 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -c -E &quot;man|MAN&quot; man_db_01\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_01 文件中查找包含 &#x2F;bin 的行并显示行号 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep &quot;&#x2F;bin&quot; man_db_01\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 在 man_db_01 文件中查找符合 &#x2F;bin 全字符的行并显示行号 ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -w &quot;&#x2F;bin&quot; man_db_01\n    echo -e &quot;\\n$&#123;Green_font_prefix&#125;------ 查找当前目录下的所有文件中查找包含 man 字段的行并显示行号(递归搜索) ------$&#123;Font_color_suffix&#125;\\n&quot; &amp;&amp; grep -r -n man\n\n    # 删除测试目录\n    cd $&#123;filepath&#125; &amp;&amp; rm -rf test_dir&#x2F;\n&#125;\n\ntest_grep</code></pre>\n\n<h4 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">------ 查找当前目录下的所有文件 ------\n\n-rw-r--r--. 1 ryan ryan 801 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_00\n-rw-r--r--. 1 ryan ryan 749 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_01\n-rw-r--r--. 1 ryan ryan 1045 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_02\n-rw-r--r--. 1 ryan ryan 722 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_03\n-rw-r--r--. 1 ryan ryan 541 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_04\n-rw-r--r--. 1 ryan ryan 917 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_05\n-rw-r--r--. 1 ryan ryan 396 Oct  2 19:10 &#x2F;home&#x2F;ryan&#x2F;Documents&#x2F;test_dir&#x2F;man_db_06\n\n------ 在 man_db_00 文件中查找包含 man 字段的行 ------\n\n# This file is used by the man-db package to configure the man and cat paths.\n# It is also used to provide a manpath for those without one by examining\n# their PATH environment variable. For details see the manpath(5) man page.\n# MANDATORY_MANPATH            manpath_element\n# MANPATH_MAP        path_element    manpath_element\n# MANDB_MAP        global_manpath    [relative_catpath]\n#MANDATORY_MANPATH             &#x2F;usr&#x2F;src&#x2F;pvm3&#x2F;man\nMANDATORY_MANPATH            &#x2F;usr&#x2F;man\n\n------ 在 man_db_00 文件中查找包含 man 字段的行(不区分大小写) ------\n\n# This file is used by the man-db package to configure the man and cat paths.\n# It is also used to provide a manpath for those without one by examining\n# their PATH environment variable. For details see the manpath(5) man page.\n# MANDATORY_MANPATH            manpath_element\n# MANPATH_MAP        path_element    manpath_element\n# MANDB_MAP        global_manpath    [relative_catpath]\n# every automatically generated MANPATH includes these fields\n#MANDATORY_MANPATH             &#x2F;usr&#x2F;src&#x2F;pvm3&#x2F;man\nMANDATORY_MANPATH            &#x2F;usr&#x2F;man\n\n------ 在 man_db_00 文件中查找不包含 man 字段的行(反向查找) ------\n\n#\n#\n#\n# Lines beginning with &#96;#&#39; are comments and are ignored. Any combination of\n# tabs or spaces may be used as &#96;whitespace&#39; separators.\n#\n# There are three mappings allowed in this file:\n# --------------------------------------------------------\n#---------------------------------------------------------\n# every automatically generated MANPATH includes these fields\n#\n#\n\n------ 在 man_db_00 文件中查找包含 man 字段的行并显示行号 ------\n\n3:# This file is used by the man-db package to configure the man and cat paths.\n4:# It is also used to provide a manpath for those without one by examining\n5:# their PATH environment variable. For details see the manpath(5) man page.\n12:# MANDATORY_MANPATH            manpath_element\n13:# MANPATH_MAP        path_element    manpath_element\n14:# MANDB_MAP        global_manpath    [relative_catpath]\n18:#MANDATORY_MANPATH             &#x2F;usr&#x2F;src&#x2F;pvm3&#x2F;man\n20:MANDATORY_MANPATH            &#x2F;usr&#x2F;man\n\n------ 在 man_db_01 文件中查找符合正则表达式 *PATH* 的行并显示行号 ------\n\n7:#        *PATH*        -&gt;    *MANPATH*\n\n------ 在 man_db_01 文件中查找符合 *PATH* 的行并显示行号(不按照正则表达式匹配) ------\n\n7:#        *PATH*        -&gt;    *MANPATH*\n\n------ 在 man_db_01 文件中查找符合扩展正则表达式 man|MAN 的行并显示行号 ------\n\n1:MANDATORY_MANPATH            &#x2F;usr&#x2F;share&#x2F;man\n2:MANDATORY_MANPATH            &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\n4:# set up PATH to MANPATH mapping\n5:# ie. what man tree holds man pages for what binary directory.\n7:#        *PATH*        -&gt;    *MANPATH*\n9:MANPATH_MAP    &#x2F;bin            &#x2F;usr&#x2F;share&#x2F;man\n10:MANPATH_MAP    &#x2F;usr&#x2F;bin        &#x2F;usr&#x2F;share&#x2F;man\n11:MANPATH_MAP    &#x2F;sbin            &#x2F;usr&#x2F;share&#x2F;man\n12:MANPATH_MAP    &#x2F;usr&#x2F;sbin        &#x2F;usr&#x2F;share&#x2F;man\n13:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;bin        &#x2F;usr&#x2F;local&#x2F;man\n14:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;bin        &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\n15:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;sbin        &#x2F;usr&#x2F;local&#x2F;man\n16:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;sbin        &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\n17:MANPATH_MAP    &#x2F;usr&#x2F;X11R6&#x2F;bin        &#x2F;usr&#x2F;X11R6&#x2F;man\n18:MANPATH_MAP    &#x2F;usr&#x2F;bin&#x2F;X11        &#x2F;usr&#x2F;X11R6&#x2F;man\n19:MANPATH_MAP    &#x2F;usr&#x2F;games        &#x2F;usr&#x2F;share&#x2F;man\n20:MANPATH_MAP    &#x2F;opt&#x2F;bin        &#x2F;opt&#x2F;man\n\n------ 在 man_db_01 文件中查找符合扩展正则表达式 man|MAN 的行总数 ------\n\n17\n\n------ 在 man_db_01 文件中查找包含 &#x2F;bin 的行并显示行号 ------\n\nMANPATH_MAP    &#x2F;bin            &#x2F;usr&#x2F;share&#x2F;man\nMANPATH_MAP    &#x2F;usr&#x2F;bin        &#x2F;usr&#x2F;share&#x2F;man\nMANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;bin        &#x2F;usr&#x2F;local&#x2F;man\nMANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;bin        &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\nMANPATH_MAP    &#x2F;usr&#x2F;X11R6&#x2F;bin        &#x2F;usr&#x2F;X11R6&#x2F;man\nMANPATH_MAP    &#x2F;usr&#x2F;bin&#x2F;X11        &#x2F;usr&#x2F;X11R6&#x2F;man\nMANPATH_MAP    &#x2F;opt&#x2F;bin        &#x2F;opt&#x2F;man\n\n------ 在 man_db_01 文件中查找符合 &#x2F;bin 全字符的行并显示行号 ------\n\nMANPATH_MAP    &#x2F;bin            &#x2F;usr&#x2F;share&#x2F;man\n\n------ 查找当前目录下的所有文件中查找包含 man 字段的行并显示行号(递归搜索) ------\n\nman_db_00:3:# This file is used by the man-db package to configure the man and cat paths.\nman_db_00:4:# It is also used to provide a manpath for those without one by examining\nman_db_00:5:# their PATH environment variable. For details see the manpath(5) man page.\nman_db_00:12:# MANDATORY_MANPATH            manpath_element\nman_db_00:13:# MANPATH_MAP        path_element    manpath_element\nman_db_00:14:# MANDB_MAP        global_manpath    [relative_catpath]\nman_db_00:18:#MANDATORY_MANPATH             &#x2F;usr&#x2F;src&#x2F;pvm3&#x2F;man\nman_db_00:20:MANDATORY_MANPATH            &#x2F;usr&#x2F;man\nman_db_01:1:MANDATORY_MANPATH            &#x2F;usr&#x2F;share&#x2F;man\nman_db_01:2:MANDATORY_MANPATH            &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\nman_db_01:5:# ie. what man tree holds man pages for what binary directory.\nman_db_01:9:MANPATH_MAP    &#x2F;bin            &#x2F;usr&#x2F;share&#x2F;man\nman_db_01:10:MANPATH_MAP    &#x2F;usr&#x2F;bin        &#x2F;usr&#x2F;share&#x2F;man\nman_db_01:11:MANPATH_MAP    &#x2F;sbin            &#x2F;usr&#x2F;share&#x2F;man\nman_db_01:12:MANPATH_MAP    &#x2F;usr&#x2F;sbin        &#x2F;usr&#x2F;share&#x2F;man\nman_db_01:13:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;bin        &#x2F;usr&#x2F;local&#x2F;man\nman_db_01:14:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;bin        &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\nman_db_01:15:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;sbin        &#x2F;usr&#x2F;local&#x2F;man\nman_db_01:16:MANPATH_MAP    &#x2F;usr&#x2F;local&#x2F;sbin        &#x2F;usr&#x2F;local&#x2F;share&#x2F;man\nman_db_01:17:MANPATH_MAP    &#x2F;usr&#x2F;X11R6&#x2F;bin        &#x2F;usr&#x2F;X11R6&#x2F;man\nman_db_01:18:MANPATH_MAP    &#x2F;usr&#x2F;bin&#x2F;X11        &#x2F;usr&#x2F;X11R6&#x2F;man\nman_db_01:19:MANPATH_MAP    &#x2F;usr&#x2F;games        &#x2F;usr&#x2F;share&#x2F;man\nman_db_01:20:MANPATH_MAP    &#x2F;opt&#x2F;bin        &#x2F;opt&#x2F;man\nman_db_02:1:MANPATH_MAP    &#x2F;opt&#x2F;sbin        &#x2F;opt&#x2F;man\nman_db_02:3:# For a manpath element to be treated as a system manpath (as most of those\nman_db_02:6:# manpath. If no catpath string is used, the catpath will default to the\nman_db_02:7:# given manpath.\nman_db_02:9:# You *must* provide all system manpaths, including manpaths for alternate\nman_db_02:10:# operating systems, locale specific manpaths, and combinations of both, if\nman_db_02:11:# they exist, otherwise the permissions of the user running man&#x2F;mandb will\nman_db_02:12:# be used to manipulate the manual pages. Also, mandb will not initialise\nman_db_02:13:# the database cache for any manpaths not mentioned below unless explicitly\nman_db_02:20:# Any manpaths that are subdirectories of other manpaths must be mentioned\nman_db_03:1:# *before* the containing manpath. E.g. &#x2F;usr&#x2F;man&#x2F;preformat must be listed\nman_db_03:2:# before &#x2F;usr&#x2F;man.\nman_db_03:6:MANDB_MAP    &#x2F;usr&#x2F;man        &#x2F;var&#x2F;cache&#x2F;man&#x2F;fsstnd\nman_db_03:7:MANDB_MAP    &#x2F;usr&#x2F;share&#x2F;man        &#x2F;var&#x2F;cache&#x2F;man\nman_db_03:8:MANDB_MAP    &#x2F;usr&#x2F;local&#x2F;man        &#x2F;var&#x2F;cache&#x2F;man&#x2F;oldlocal\nman_db_03:9:MANDB_MAP    &#x2F;usr&#x2F;local&#x2F;share&#x2F;man    &#x2F;var&#x2F;cache&#x2F;man&#x2F;local\nman_db_03:10:MANDB_MAP    &#x2F;usr&#x2F;X11R6&#x2F;man        &#x2F;var&#x2F;cache&#x2F;man&#x2F;X11R6\nman_db_03:11:MANDB_MAP    &#x2F;opt&#x2F;man        &#x2F;var&#x2F;cache&#x2F;man&#x2F;opt\nman_db_04:2:#DEFINE     troff     groff -mandoc\nman_db_04:3:#DEFINE     nroff     nroff -mandoc -c\nman_db_06:10:# NOCACHE keeps man from creating cat pages.</code></pre>\n\n<h2 id=\"类似命令\"><a href=\"#类似命令\" class=\"headerlink\" title=\"类似命令\"></a>类似命令</h2><h3 id=\"egrep\"><a href=\"#egrep\" class=\"headerlink\" title=\"egrep\"></a>egrep</h3><p>egrep 是”<code>Extended Global Regular Expressions Print</code>“的首字母缩写词。grep 默认不支持扩展正则表达式，只支持基础正则表达式，想要支持扩展正则表达式可以：</p>\n<ul>\n<li>使用 <code>grep -E</code> 命令</li>\n<li>使用 <code>wgrep</code> 命令</li>\n</ul>\n<h3 id=\"fgrep\"><a href=\"#fgrep\" class=\"headerlink\" title=\"fgrep\"></a>fgrep</h3><p>fgrep 是 “<code>Fixed-string Global Regular Expressions Print</code>“ 的首字母缩写词，意为固定字符串全局正则表达式打印。</p>\n<p><code>fgrep</code> 命令用于查找文件里符合条件的字符串，等价于 <code>grep -F</code> 命令。</p>\n<h3 id=\"pgrep\"><a href=\"#pgrep\" class=\"headerlink\" title=\"pgrep\"></a>pgrep</h3><p>pgrep 是”<code>Process-ID Global Regular Expressions Print</code>“的首字母缩写词。pgrep 命令以名称为依据从运行进程队列中查找进程，并显示查找到的进程 id。每一个进程 ID 以一个十进制数表示，通过一个分割字符串和下一个 ID 分开，默认的分割字符串是一个新行。对于每个属性选项，用户可以在命令行上指定一个以逗号分割的可能值的集合。</p>\n<h4 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h4><table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-o</code></td>\n<td>仅显示找到的最小（起始）进程号；</td>\n</tr>\n<tr>\n<td><code>-n</code></td>\n<td>仅显示找到的最大（结束）进程号；</td>\n</tr>\n<tr>\n<td><code>-l</code></td>\n<td>显示进程名称；</td>\n</tr>\n<tr>\n<td><code>-P</code></td>\n<td>指定父进程号；</td>\n</tr>\n<tr>\n<td><code>-g</code></td>\n<td>指定进程组；</td>\n</tr>\n<tr>\n<td><code>-t</code></td>\n<td>指定开启进程的终端；</td>\n</tr>\n<tr>\n<td><code>-u</code></td>\n<td>指定进程的有效用户 ID。</td>\n</tr>\n</tbody></table>\n<h4 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Usage:\n pgrep [options] &lt;pattern&gt;\n\nOptions:\n -d, --delimiter &lt;string&gt;  specify output delimiter\n -l, --list-name           list PID and process name\n -a, --list-full           list PID and full command line\n -v, --inverse             negates the matching\n -w, --lightweight         list all TID\n -c, --count               count of matching processes\n -f, --full                use full process name to match\n -g, --pgroup &lt;PGID,...&gt;   match listed process group IDs\n -G, --group &lt;GID,...&gt;     match real group IDs\n -n, --newest              select most recently started\n -o, --oldest              select least recently started\n -P, --parent &lt;PPID,...&gt;   match only child processes of the given parent\n -s, --session &lt;SID,...&gt;   match session IDs\n -t, --terminal &lt;tty,...&gt;  match by controlling terminal\n -u, --euid &lt;ID,...&gt;       match by effective IDs\n -U, --uid &lt;ID,...&gt;        match by real IDs\n -x, --exact               match exactly with the command name\n -F, --pidfile &lt;file&gt;      read PIDs from file\n -L, --logpidfile          fail if PID file is not locked\n --ns &lt;PID&gt;                match the processes that belong to the same\n                           namespace as &lt;pid&gt;\n --nslist &lt;ns,...&gt;         list which namespaces will be considered for\n                           the --ns option.\n                           Available namespaces: ipc, mnt, net, pid, user, uts\n\n -h, --help     display this help and exit\n -V, --version  output version information and exit</code></pre>\n\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[ryan@ryan-tencentcloud-2]~ pgrep -lo nginx # nginx 最小进程号\n4399 nginx\n[ryan@ryan-tencentcloud-2]~ pgrep -ln nginx # nginx 最大进程号\n4400 nginx\n[ryan@ryan-tencentcloud-2]~ pgrep -l nginx # nginx 进程号和进程名\n4399 nginx\n4400 nginx\n[ryan@ryan-tencentcloud-2]~ pgrep -la nginx # nginx 进程号和命令\n4399 nginx: master process &#x2F;usr&#x2F;sbin&#x2F;nginx\n4400 nginx: worker process</code></pre>\n\n<h3 id=\"rgrep\"><a href=\"#rgrep\" class=\"headerlink\" title=\"rgrep\"></a>rgrep</h3><p><code> rgrep</code> 命令用于递归查找文件里符合条件的字符串，类似于 <code>grep -r</code> 命令。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本文代码：<a href=\"https://github.com/JaimeZeng/learning-linux/314-shell-scripting/05-shell/\">05-shell</a></p></blockquote>\n","text":"grepgrep 是”Global Regular Expressions Print“的首字母缩写词，意为全局正则表达式打印。grep 是一个逐行扫描指定文件或文件的程序，返回包含模式的行。模式是一种表达式，它通过将字符解释为元字符来指定一组字符串。例如，星号元字符（*）被解释...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":7,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":5,"path":"api/tags/Shell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#grep\"><span class=\"toc-text\">grep</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">语法格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\">练习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">测试脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">运行结果</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E4%BC%BC%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">类似命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#egrep\"><span class=\"toc-text\">egrep</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fgrep\"><span class=\"toc-text\">fgrep</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pgrep\"><span class=\"toc-text\">pgrep</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">选项</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">文档</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#rgrep\"><span class=\"toc-text\">rgrep</span></a></li></ol></li></ol>","author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}},"mapped":true,"prev_post":{"title":"文本处理 sed","uid":"a92869a2b48f0ffce8551661a1622e3c","slug":"2020-10-03-06_文本处理 sed","date":"2020-10-03T11:24:26.000Z","updated":"2021-09-02T22:41:49.931Z","comments":true,"path":"api/articles/2020-10-03-06_文本处理 sed.json","keywords":null,"cover":null,"text":"本章主要讲解 Shell 中最核心的文本处理三剑客之 sed 的用法。 sed 的工作模式基础介绍 sed(Stream Editor)：流编辑器。对标准输出或文件逐行进行处理。 语法格式| | 格式 || —— | ————————————- | ——————————- || ...","link":"","photos":[],"count_time":{"symbolsCount":"89k","symbolsTime":"1:20"},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":7,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":5,"path":"api/tags/Shell.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}},"next_post":{"title":"文件查找命令 find","uid":"9351df5cbba08f50ebf152b511a1565c","slug":"2020-10-03-04_文件查找 find","date":"2020-10-03T11:22:26.000Z","updated":"2021-09-02T22:41:49.931Z","comments":true,"path":"api/articles/2020-10-03-04_文件查找 find.json","keywords":null,"cover":null,"text":"该小节讲解 Shell 中常用的命令，包括文件查找 find 和 locate 的使用，尤其是 find 的各种高级用法，并结合 xargs 对大量文件进行处理；之后讲解数据备份、文件压缩、目录备份以及下载工具的使用方法；所有的用法都会在真实环境给大家做演示… find语法 语法...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":7,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":5,"path":"api/tags/Shell.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}}}