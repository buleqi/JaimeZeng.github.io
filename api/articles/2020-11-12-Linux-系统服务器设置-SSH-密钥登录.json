{"title":"Linux 系统服务器设置 SSH 密钥登录","uid":"96e91c457e2731962d3902abef5c9240","slug":"2020-11-12-Linux-系统服务器设置-SSH-密钥登录","date":"2020-11-12T10:52:36.000Z","updated":"2021-09-09T10:58:43.747Z","comments":true,"path":"api/articles/2020-11-12-Linux-系统服务器设置-SSH-密钥登录.json","keywords":null,"cover":[],"content":"<p><img src=\"https://img.zxj.guru/2020/11/linux-ssh-key-login.png\" alt=\"linux-ssh-key-login\"></p>\n<p>Linux 系统服务器的 SSH 登录方式最常见的有两种：通过用户密码登录或者采用密钥对登录。其中使用用户密码方式登录，容易有密码被暴力破解的问题。为了安全，可以使用 <a href=\"https://1password.com/zh-cn/password-generator/\">1Password 密码生成器</a> 生成长度 30 位，包含大小写字母、数字和符号的用户密码，并且定期更换密码，这样就导致密码总是记不住，每次登录服务器都需要找一下密码。所以我们在远程 SSH 登录时采用第二章方式：使用密钥对登录服务器。</p>\n<p>密钥形式登录的原理是：利用密钥生成器制作一对密钥(公钥+私钥)。将公钥添加到服务器的某个账户上，然后在客户端利用私钥即可完成认证并登录。这样一来，没有私钥，任何人都无法通过 SSH 暴力破解你的密码来远程登录到系统。此外，如果将公钥复制到其他账户甚至主机，利用私钥也可以登录。</p>\n<p>密钥形式登录的过程：</p>\n<ol>\n<li>生成密钥对。</li>\n<li>将生成的公钥追加到 <code>~/.ssh/authorized_keys</code> 文件中。</li>\n<li>服务器打开密钥登录功能。</li>\n<li>客户端选中生成的私钥，进行密钥登录。</li>\n</ol>\n<h2 id=\"生成密钥对\"><a href=\"#生成密钥对\" class=\"headerlink\" title=\"生成密钥对\"></a>生成密钥对</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>Windows 下需要安装 Git 后才能生成，不想安装 Git 的可以直接使用 Xshell 工具生成。</p>\n<ol>\n<li><p>点击 Xshell 菜单栏中的 <kbd>工具</kbd> - <kbd>新建用户密钥生成向导</kbd> 开始生成密钥对。</p>\n<p><img src=\"https://img.zxj.guru/2020/11/xshell-create-ssh-key-0.jpg\" alt=\"xshell-create-ssh-key-0\"></p>\n</li>\n<li><p>点击 <kbd>下一步</kbd>。</p>\n<p><img src=\"https://img.zxj.guru/2020/11/xshell-create-ssh-key-1.jpg\" alt=\"xshell-create-ssh-key-1\"></p>\n</li>\n<li><p>点击 <kbd>下一步</kbd>。</p>\n<p><img src=\"https://img.zxj.guru/2020/11/xshell-create-ssh-key-2.jpg\" alt=\"xshell-create-ssh-key-2\"></p>\n</li>\n<li><p>补充信息，然后点击 <kbd>完成</kbd>。</p>\n<p><img src=\"https://img.zxj.guru/2020/11/xshell-create-ssh-key-3.jpg\" alt=\"xshell-create-ssh-key-3\"></p>\n</li>\n<li><p>查看并复制公钥内容。</p>\n<p><img src=\"https://img.zxj.guru/2020/11/xshell-create-ssh-key-4.jpg\" alt=\"xshell-create-ssh-key-4\"></p>\n</li>\n</ol>\n<h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><ol>\n<li><p>打开终端。</p>\n</li>\n<li><p>输入以下命令（替换为您的电子邮件地址）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;\n#如果您使用的是不支持 Ed25519 算法的旧系统，请使用以下命令：\n$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code></pre></li>\n<li><p>这将创建以所提供的电子邮件地址为标签的新 SSH 密钥。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&gt; Generating public&#x2F;private ed25519 key pair.</code></pre></li>\n<li><p>提示您 “<code>Enter a file in which to save the key</code>（输入要保存密钥的文件）”时，按 <kbd>Enter</kbd> 键。 这将接受默认文件位置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&gt; Enter a file in which to save the key (&#x2F;home&#x2F;you&#x2F;.ssh&#x2F;id_ed25519): [Press enter]</code></pre></li>\n<li><p>在提示时输入安全密码。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&gt; Enter passphrase (empty for no passphrase): [Type a passphrase]\n&gt; Enter same passphrase again: [Type passphrase again]</code></pre></li>\n<li><p>查看并复制公钥内容。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom&#x2F;BWDSU\nGPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3\nPbv7kOdJ&#x2F;MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK&#x2F;7XA\nt3FaoJoAsncM1Q9x5+3V0Ww68&#x2F;eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw&#x2F;Pb0rwert&#x2F;En\nmZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z&#x2F;il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx\nNrRFi9wrf+M7Q&#x3D;&#x3D; schacon@mylaptop.local</code></pre></li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果您的私钥没有存储在默认位置之一（如 <code>~/.ssh/id_rsa</code>），您需要告知 SSH 身份验证代理其所在位置。 要将密钥添加到 ssh-agent，请输入 <code>ssh-add ~/path/to/my_key</code>。</p></blockquote>\n<h2 id=\"在服务器上安装公钥\"><a href=\"#在服务器上安装公钥\" class=\"headerlink\" title=\"在服务器上安装公钥\"></a>在服务器上安装公钥</h2><p><code>authorized_keys</code> 是 linux 操作系统下，专门用来存放公钥的地方，只要公钥放到了服务器的正确位置，并且拥有正确的权限，你才可以通过你的私钥，免密登录 linux 服务器。</p>\n<ol>\n<li><p>登录服务器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh ryanpd5i@13.229.188.59</code></pre></li>\n<li><p>将公钥内容追加到 <code>~/.ssh/authorized_keys</code> 文件中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">echo &quot;公钥内容&quot; &gt;&gt; ~&#x2F;.ssh&#x2F;authorized_keys</code></pre></li>\n<li><p>更改文件权限。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys\nsudo chmod 700 ~&#x2F;.ssh</code></pre></li>\n</ol>\n<h2 id=\"服务器打开密钥登录功能\"><a href=\"#服务器打开密钥登录功能\" class=\"headerlink\" title=\"服务器打开密钥登录功能\"></a>服务器打开密钥登录功能</h2><ol>\n<li><p>编辑 <code>/etc/ssh/sshd_config</code> 文件，进行如下设置：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">RSAAuthentication yes\nPubkeyAuthentication yes\n#bash\nsudo sed -i &#39;&#x2F;#PubkeyAuthentication yes&#x2F;iRSAAuthentication yes&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config\nsudo sed -i &#39;s&#x2F;#PubkeyAuthentication yes&#x2F;PubkeyAuthentication yes&#x2F;g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre></li>\n<li><p>阻止 root 用户通过 SSH 登录：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PermitRootLogin yes\n#bash\nsudo sed -i &#39;s&#x2F;#PermitRootLogin yes&#x2F;PermitRootLogin yes&#x2F;g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre></li>\n</ol>\n<h2 id=\"以密钥方式登录\"><a href=\"#以密钥方式登录\" class=\"headerlink\" title=\"以密钥方式登录\"></a>以密钥方式登录</h2><p>Linux 下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh ryanpd5i@13.229.188.59</code></pre>\n\n<p>Windows Xshell 下：</p>\n<p><img src=\"https://img.zxj.guru/2020/11/xshell-ssh-key-login.jpg\" alt=\"xshell-ssh-key-login\"></p>\n<p>当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PasswordAuthentication no\n#bash\nsudo sed -i &#39;s&#x2F;PasswordAuthentication yes&#x2F;PasswordAuthentication no&#x2F;g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre>\n\n<p>最后，重启 SSH 服务：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">service sshd restart</code></pre>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\">Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</a></li>\n<li><a href=\"https://www.runoob.com/w3cnote/set-ssh-login-key.html\">设置 SSH 通过密钥登录</a></li>\n</ul>\n","text":" Linux 系统服务器的 SSH 登录方式最常见的有两种：通过用户密码登录或者采用密钥对登录。其中使用用户密码方式登录，容易有密码被暴力破解的问题。为了安全，可以使用 1Password 密码生成器 生成长度 30 位，包含大小写字母、数字和符号的用户密码，并且定期更换密码，这...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5%E5%AF%B9\"><span class=\"toc-text\">生成密钥对</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Windows\"><span class=\"toc-text\">Windows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux\"><span class=\"toc-text\">Linux</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%89%E8%A3%85%E5%85%AC%E9%92%A5\"><span class=\"toc-text\">在服务器上安装公钥</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%93%E5%BC%80%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">服务器打开密钥登录功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E5%AF%86%E9%92%A5%E6%96%B9%E5%BC%8F%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">以密钥方式登录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}},"mapped":true,"prev_post":{"title":"CentOS 手动更换内核","uid":"64736f77b89e86715a6b7061bf24c0ba","slug":"2020-11-13-CentOS-手动更换内核","date":"2020-11-13T13:26:07.000Z","updated":"2021-09-09T10:58:43.751Z","comments":true,"path":"api/articles/2020-11-13-CentOS-手动更换内核.json","keywords":null,"cover":[],"text":" 由于开启 BBR 需 4.10 以上版本 Linux 内核， 但是云服务器安装的 CentOS 7 系统内核是 3.10，低于开启 BBR 最低要求的版本 4.10，所以我们需要手动更换为默认内核后再作升级。 由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"CentOS","slug":"CentOS","count":5,"path":"api/categories/CentOS.json"}],"tags":[{"name":"CentOS","slug":"CentOS","count":5,"path":"api/tags/CentOS.json"},{"name":"Kernel","slug":"Kernel","count":1,"path":"api/tags/Kernel.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}},"next_post":{"title":"Linux 系统服务器禁止 root 用户登录","uid":"60594cec29f293a49a928359541eda5f","slug":"2020-11-12-Linux-云服务器禁止-root-用户登录","date":"2020-11-12T10:06:33.000Z","updated":"2021-09-09T10:58:43.747Z","comments":true,"path":"api/articles/2020-11-12-Linux-云服务器禁止-root-用户登录.json","keywords":null,"cover":[],"text":" Linux 账户下 root 账户属于超级用户，具有全权管理权，可以做任何事。如果误操作会产生很大的破坏性。如果被黑，对方得到 root 的权限就能够读取写入系统上的所有文件。为了避免这一现象，我们需要添加新的用户并赋予管理员权限。该用户想要获取 root 权限可以使用 sud...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}}}