{"title":"SQL 练习 12 - 获取所有部门中当前员工薪水最高的相关信息","uid":"f8017dd1008f3562251696136ad1fbad","slug":"2021-04-09-SQL 练习 12 - 获取所有部门中当前员工薪水最高的相关信息","date":"2021-04-09T11:58:08.000Z","updated":"2021-09-06T15:53:22.646Z","comments":true,"path":"api/articles/2021-04-09-SQL 练习 12 - 获取所有部门中当前员工薪水最高的相关信息.json","keywords":null,"cover":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目链接： <a href=\"https://www.nowcoder.com/practice/4a052e3e1df5435880d4353eb18a91c6\">获取所有部门中当前员工薪水最高的相关信息</a></p></blockquote>\n<p>有一个员工表 dept_emp 简况如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select * from dept_emp;\n+--------+---------+------------+------------+\n| emp_no | dept_no | from_date  | to_date    |\n+--------+---------+------------+------------+\n|  10001 | d001    | 1986-06-26 | 9999-01-01 |\n|  10002 | d001    | 1996-08-03 | 9999-01-01 |\n|  10003 | d002    | 1996-08-03 | 9999-01-01 |\n+--------+---------+------------+------------+\n3 rows in set(0.03 sec)</code></pre>\n\n<p>有一个薪水表 salaries 简况如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select * from salaries;\n+--------+--------+------------+------------+\n| emp_no | salary | from_date  | to_date    |\n+--------+--------+------------+------------+\n|  10001 |  88958 | 2002-06-22 | 9999-01-01 |\n|  10002 |  72527 | 2001-08-02 | 9999-01-01 |\n|  10003 |  92527 | 2001-08-02 | 9999-01-01 |\n+--------+--------+------------+------------+\n3 rows in set(0.03 sec)</code></pre>\n\n<p>建表及插入数据语句如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE &#96;dept_emp&#96;\n (\n    &#96;emp_no&#96;    int(11)     NOT NULL,\n    &#96;dept_no&#96;   varchar(16) NOT NULL,\n    &#96;from_date&#96; date        NOT NULL,\n    &#96;to_date&#96;   date        NOT NULL,\n    PRIMARY KEY(&#96;emp_no&#96;, &#96;dept_no&#96;)\n);\n\nINSERT INTO &#96;dept_emp&#96;\nVALUES(10001, &#39;d001&#39;, &#39;1986-06-26&#39;, &#39;9999-01-01&#39;);\nINSERT INTO &#96;dept_emp&#96;\nVALUES(10002, &#39;d001&#39;, &#39;1996-08-03&#39;, &#39;9999-01-01&#39;);\nINSERT INTO &#96;dept_emp&#96;\nVALUES(10003, &#39;d002&#39;, &#39;1996-08-03&#39;, &#39;9999-01-01&#39;);\n\nCREATE TABLE &#96;salaries&#96;\n (\n    &#96;emp_no&#96;    int(11) NOT NULL,\n    &#96;salary&#96;    int(11) NOT NULL,\n    &#96;from_date&#96; date    NOT NULL,\n    &#96;to_date&#96;   date    NOT NULL,\n    PRIMARY KEY(&#96;emp_no&#96;, &#96;from_date&#96; )\n);\n\nINSERT INTO &#96;salaries&#96;\nVALUES(10001,88958, &#39;2002-06-22&#39;, &#39;9999-01-01&#39;);\nINSERT INTO &#96;salaries&#96;\nVALUES(10002,72527, &#39;2001-08-02&#39;, &#39;9999-01-01&#39;);\nINSERT INTO &#96;salaries&#96;\nVALUES(10003,92527, &#39;2001-08-02&#39;, &#39;9999-01-01&#39;);</code></pre>\n\n<p>获取所有部门中员工薪水最高的相关信息，给出 dept_no, emp_no 以及其对应的 salary，按照部门编号升序排列，以上例子输出如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">+---------+--------+-----------+\n| dept_no | emp_no | maxSalary |\n+---------+--------+-----------+\n| d001    |  10001 |     88958 |\n| d002    |  10003 |     92527 |\n+---------+--------+-----------+\n2 rows in set(0.04 sec)</code></pre>\n\n<h2 id=\"测试用例-1\"><a href=\"#测试用例-1\" class=\"headerlink\" title=\"测试用例 1\"></a>测试用例 1</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">drop table if exists &#96;dept_emp&#96;;\ndrop table if exists &#96;salaries&#96;;\nCREATE TABLE &#96;dept_emp&#96;\n (\n    &#96;emp_no&#96;    int(11) NOT NULL,\n    &#96;dept_no&#96;   char(4) NOT NULL,\n    &#96;from_date&#96; date    NOT NULL,\n    &#96;to_date&#96;   date    NOT NULL,\n    PRIMARY KEY(&#96;emp_no&#96;, &#96;dept_no&#96;)\n);\nCREATE TABLE &#96;salaries&#96;\n (\n    &#96;emp_no&#96;    int(11) NOT NULL,\n    &#96;salary&#96;    int(11) NOT NULL,\n    &#96;from_date&#96; date    NOT NULL,\n    &#96;to_date&#96;   date    NOT NULL,\n    PRIMARY KEY(&#96;emp_no&#96;, &#96;from_date&#96;)\n);\nINSERT INTO dept_emp\nVALUES(10001, &#39;d001&#39;, &#39;1986-06-26&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10002, &#39;d001&#39;, &#39;1996-08-03&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10003, &#39;d004&#39;, &#39;1995-12-03&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10004, &#39;d004&#39;, &#39;1986-12-01&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10005, &#39;d003&#39;, &#39;1989-09-12&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10006, &#39;d002&#39;, &#39;1990-08-05&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10007, &#39;d005&#39;, &#39;1989-02-10&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10009, &#39;d006&#39;, &#39;1985-02-18&#39;, &#39;9999-01-01&#39;);\nINSERT INTO dept_emp\nVALUES(10010, &#39;d006&#39;, &#39;2000-06-26&#39;, &#39;9999-01-01&#39;);\n\nINSERT INTO salaries\nVALUES(10001,88958, &#39;2002-06-22&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10002,72527, &#39;2001-08-02&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10003,43311, &#39;2001-12-01&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10004,74057, &#39;2001-11-27&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10005,94692, &#39;2001-09-09&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10006,43311, &#39;2001-08-02&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10007,88070, &#39;2002-02-07&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10009,95409, &#39;2002-02-14&#39;, &#39;9999-01-01&#39;);\nINSERT INTO salaries\nVALUES(10010,94409, &#39;2001-11-23&#39;, &#39;9999-01-01&#39;);</code></pre>\n\n<p>结构如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select * from dept_emp;\n+--------+---------+------------+------------+\n| emp_no | dept_no | from_date  | to_date    |\n+--------+---------+------------+------------+\n|  10001 | d001    | 1986-06-26 | 9999-01-01 |\n|  10002 | d001    | 1996-08-03 | 9999-01-01 |\n|  10003 | d004    | 1995-12-03 | 9999-01-01 |\n|  10004 | d004    | 1986-12-01 | 9999-01-01 |\n|  10005 | d003    | 1989-09-12 | 9999-01-01 |\n|  10006 | d002    | 1990-08-05 | 9999-01-01 |\n|  10007 | d005    | 1989-02-10 | 9999-01-01 |\n|  10009 | d006    | 1985-02-18 | 9999-01-01 |\n|  10010 | d006    | 2000-06-26 | 9999-01-01 |\n+--------+---------+------------+------------+\n9 rows in set(0.03 sec)\n\nmysql&gt; select * from salaries;\n+--------+--------+------------+------------+\n| emp_no | salary | from_date  | to_date    |\n+--------+--------+------------+------------+\n|  10001 |  88958 | 2002-06-22 | 9999-01-01 |\n|  10002 |  72527 | 2001-08-02 | 9999-01-01 |\n|  10003 |  43311 | 2001-12-01 | 9999-01-01 |\n|  10004 |  74057 | 2001-11-27 | 9999-01-01 |\n|  10005 |  94692 | 2001-09-09 | 9999-01-01 |\n|  10006 |  43311 | 2001-08-02 | 9999-01-01 |\n|  10007 |  88070 | 2002-02-07 | 9999-01-01 |\n|  10009 |  95409 | 2002-02-14 | 9999-01-01 |\n|  10010 |  94409 | 2001-11-23 | 9999-01-01 |\n+--------+--------+------------+------------+\n9 rows in set(0.03 sec)</code></pre>\n\n<h2 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码 1\"></a>代码 1</h2><p>一个部门存在多个人的薪水 salary 等于部门 dept_no 的 max(salary)，全部显示。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select dms.dept_no, sas.emp_no, dms.maxSalary\nfrom (\n         select de.dept_no as dept_no, max(sa.salary) as maxSalary\n         from dept_emp as de,\n              salaries as sa\n         where de.emp_no &#x3D; sa.emp_no\n           and de.to_date &#x3D; &#39;9999-01-01&#39;\n           and sa.to_date &#x3D; &#39;9999-01-01&#39;\n         group by de.dept_no\n)as dms,\n     dept_emp as dep,\n     salaries as sas\nwhere sas.salary &#x3D; dms.maxSalary\n  and dep.emp_no &#x3D; sas.emp_no\n  and dep.to_date &#x3D; &#39;9999-01-01&#39;\n  and sas.to_date &#x3D; &#39;9999-01-01&#39;\norder by dms.dept_no asc;</code></pre>\n\n<p>先创建一张部门员工最大 salary 表，用于记录 dept_no 和 dept_no 的 max(salary):</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select de.dept_no as dept_no, max(sa.salary) as maxSalary\n    -&gt; from dept_emp as de,\n    -&gt;      salaries as sa\n    -&gt; where de.emp_no &#x3D; sa.emp_no\n    -&gt;   and de.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;   and sa.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt; group by de.dept_no;\n+---------+-----------+\n| dept_no | maxSalary |\n+---------+-----------+\n| d001    |     88958 |\n| d002    |     92527 |\n+---------+-----------+\n2 rows in set(0.04 sec)</code></pre>\n\n<p>然后关联三张表（部门员工表 dept_emp、薪水表 salaries、部门最大薪水表 dept_max_salary)，选择工资 salary 等于部门编号 dept_no 的 max(salary) 的员工 dept_emp.emp_no，最后按照部门编号 dept_no 升序排列。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select dms.dept_no, sas.emp_no, dms.maxSalary\n    -&gt; from (\n    -&gt;          select de.dept_no as dept_no, max(sa.salary) as maxSalary\n    -&gt;          from dept_emp as de,\n    -&gt;               salaries as sa\n    -&gt;          where de.emp_no &#x3D; sa.emp_no\n    -&gt;            and de.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;            and sa.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;          group by de.dept_no\n    -&gt;)as dms,\n    -&gt;      dept_emp as dep,\n    -&gt;      salaries as sas\n    -&gt; where sas.salary &#x3D; dms.maxSalary\n    -&gt;   and dep.emp_no &#x3D; sas.emp_no\n    -&gt;   and dep.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;   and sas.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt; order by dms.dept_no asc;\n+---------+--------+-----------+\n| dept_no | emp_no | maxSalary |\n+---------+--------+-----------+\n| d001    |  10001 |     88958 |\n| d002    |  10003 |     92527 |\n+---------+--------+-----------+\n2 rows in set(0.04 sec)</code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select dms.dept_no, sas.emp_no, dms.maxSalary\n    -&gt; from (\n    -&gt;          select de.dept_no as dept_no, max(sa.salary) as maxSalary\n    -&gt;          from dept_emp as de,\n    -&gt;               salaries as sa\n    -&gt;          where de.emp_no &#x3D; sa.emp_no\n    -&gt;            and de.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;            and sa.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;          group by de.dept_no\n    -&gt;)as dms,\n    -&gt;      dept_emp as dep,\n    -&gt;      salaries as sas\n    -&gt; where sas.salary &#x3D; dms.maxSalary\n    -&gt;   and dep.emp_no &#x3D; sas.emp_no\n    -&gt;   and dep.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;   and sas.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt; order by dms.dept_no asc;\n+---------+--------+-----------+\n| dept_no | emp_no | maxSalary |\n+---------+--------+-----------+\n| d001    |  10001 |     88958 |\n| d002    |  10003 |     43311 |\n| d002    |  10006 |     43311 |\n| d003    |  10005 |     94692 |\n| d004    |  10004 |     74057 |\n| d005    |  10007 |     88070 |\n| d006    |  10009 |     95409 |\n+---------+--------+-----------+\n7 rows in set(0.02 sec)</code></pre>\n\n<h2 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码 2\"></a>代码 2</h2><p>一个部门存在多个人的薪水 salary 等于部门 dept_no 的 max(salary)，只显示员工号 emp_no 最大的一条。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select es.dept_no, es.emp_no, es.salary as maxSalary\nfrom (\n         select de.dept_no, de.emp_no, sa.salary\n         from dept_emp as de,\n              salaries as sa\n         where de.emp_no &#x3D; sa.emp_no\n           and de.to_date &#x3D; &#39;9999-01-01&#39;\n           and sa.to_date &#x3D; &#39;9999-01-01&#39;\n         order by sa.salary desc\n    )as es\ngroup by es.dept_no\norder by es.dept_no asc;</code></pre>\n\n<p>先将所有员工薪资按照降序排列：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql&gt; select de.dept_no, de.emp_no, sa.salary\n    -&gt; from dept_emp as de,\n    -&gt;      salaries as sa\n    -&gt; where de.emp_no &#x3D; sa.emp_no\n    -&gt;   and de.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt;   and sa.to_date &#x3D; &#39;9999-01-01&#39;\n    -&gt; order by sa.salary desc;\n+---------+--------+--------+\n| dept_no | emp_no | salary |\n+---------+--------+--------+\n| d006    |  10009 |  95409 |\n| d003    |  10005 |  94692 |\n| d006    |  10010 |  94409 |\n| d001    |  10001 |  88958 |\n| d005    |  10007 |  88070 |\n| d004    |  10004 |  74057 |\n| d001    |  10002 |  72527 |\n| d002    |  10006 |  43311 |\n| d004    |  10003 |  43311 |\n+---------+--------+--------+\n9 rows in set (0.03 sec)</code></pre>\n\n<p>然后使用 group by 默认取非聚合数据的第一条记录，然后按照部门编号 dept_no 升序排列。（在 mysql 上也会触发 only_full_group_by 模式，select 列表中出现 group by 和聚合函数之外的非聚合字段）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select es.dept_no, es.emp_no, es.salary as maxSalary\nfrom (\n         select de.dept_no, de.emp_no, sa.salary\n         from dept_emp as de,\n              salaries as sa\n         where de.emp_no &#x3D; sa.emp_no\n           and de.to_date &#x3D; &#39;9999-01-01&#39;\n           and sa.to_date &#x3D; &#39;9999-01-01&#39;\n         order by sa.salary desc\n    )as es\ngroup by es.dept_no\norder by es.dept_no asc;</code></pre>\n","text":"题目 题目链接： 获取所有部门中当前员工薪水最高的相关信息 有一个员工表 dept_emp 简况如下： mysql&gt; select * from dept_emp; +--------+---------+------------+------------+ | emp_n...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"SQL","slug":"SQL","count":16,"path":"api/categories/SQL.json"}],"tags":[{"name":"SQL","slug":"SQL","count":16,"path":"api/tags/SQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B-1\"><span class=\"toc-text\">测试用例 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">代码 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-2\"><span class=\"toc-text\">代码 2</span></a></li></ol>","author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}},"mapped":true,"prev_post":{"title":"SQL 练习 15 - 查找 employees 表所有 emp_no 为奇数","uid":"8dbbf7765577357c58fb44db48779866","slug":"2021-04-10-SQL 练习 15 - 查找 employees 表所有 emp_no 为奇数","date":"2021-04-10T06:05:02.000Z","updated":"2021-09-06T15:53:22.646Z","comments":true,"path":"api/articles/2021-04-10-SQL 练习 15 - 查找 employees 表所有 emp_no 为奇数.json","keywords":null,"cover":null,"text":"题目 题目链接：查找employees表所有emp_no为奇数 有一个员工表 employees 简况如下： mysql&gt; select * from employees; +--------+------------+------------+-----------+--...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"SQL","slug":"SQL","count":16,"path":"api/categories/SQL.json"}],"tags":[{"name":"SQL","slug":"SQL","count":16,"path":"api/tags/SQL.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}},"next_post":{"title":"SQL 练习 11 - 获取所有员工当前的 manager","uid":"d999d4d857c4990140fca7cdb9ae2222","slug":"2021-04-09-SQL 练习 11 - 获取所有员工当前的 manager","date":"2021-04-09T11:50:56.000Z","updated":"2021-09-06T15:53:22.646Z","comments":true,"path":"api/articles/2021-04-09-SQL 练习 11 - 获取所有员工当前的 manager.json","keywords":null,"cover":null,"text":"题目 题目链接：获取所有员工当前的manager 有一个员工表 dept_emp 简况如下： mysql&gt; select * from dept_emp; +--------+---------+------------+------------+ | emp_no | d...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"SQL","slug":"SQL","count":16,"path":"api/categories/SQL.json"}],"tags":[{"name":"SQL","slug":"SQL","count":16,"path":"api/tags/SQL.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}}}