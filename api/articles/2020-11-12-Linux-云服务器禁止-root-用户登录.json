{"title":"Linux 系统服务器禁止 root 用户登录","uid":"60594cec29f293a49a928359541eda5f","slug":"2020-11-12-Linux-云服务器禁止-root-用户登录","date":"2020-11-12T10:06:33.000Z","updated":"2021-09-17T01:31:25.018Z","comments":true,"path":"api/articles/2020-11-12-Linux-云服务器禁止-root-用户登录.json","keywords":null,"cover":[],"content":"<p><img src=\"https://img.zxj.guru/2020/11/linux-permit-root-login.png\" alt=\"linux-permit-root-login\"></p>\n<p>Linux 账户下 root 账户属于超级用户，具有全权管理权，可以做任何事。如果误操作会产生很大的破坏性。如果被黑，对方得到 root 的权限就能够读取写入系统上的所有文件。为了避免这一现象，我们需要添加新的用户并赋予管理员权限。该用户想要获取 root 权限可以使用 sudo 方式，sudo 只限制该用户有限的命令下有 root 权限， 而不是将所有 root 的命令权限给该用户，这样可以避免该用户使用 root 账户密码。</p>\n<h2 id=\"添加新用户赋管理员权限\"><a href=\"#添加新用户赋管理员权限\" class=\"headerlink\" title=\"添加新用户赋管理员权限\"></a>添加新用户赋管理员权限</h2><ol>\n<li><p>添加新用户。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># useradd ryanpd5i</code></pre></li>\n<li><p>给新用户设置密码，会让你输入两次密码。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># passwd ryanpd5i\nChanging password for user ryanpd5i.\nNew password: r4hRBzGTN#FQt#iyxvGPFP^zB#q4Wu\nRetype new password: r4hRBzGTN#FQt#iyxvGPFP^zB#q4Wu\npasswd: all authentication tokens updated successfully.</code></pre></li>\n<li><p>将新用户加入 wheel 组。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在 Linux 中 wheel 组就类似于一个管理员的组。</p>\n<p>通常在 Linux 下，即使我们有系统管理员 root 的权限，也不推荐用 root 用户登录。一般情况下用普通用户登录就可以了，在需要 root 权限执行一些操作时，再 su 登录成为 root 用户。但是，任何人只要知道了 root 的密码，就都可以通过 su 命令来登录为 root 用户，这无疑为系统带来了安全隐患。所以，将普通用户加入到 wheel 组，被加入的这个普通用户就成了管理员组内的用户，但如果不对一些相关的配置文件进行配置，这个管理员组内的用户与普通用户也没什么区别，就像警察下班后，没有带枪、穿这便衣和普通人（用户）一样，虽然他的确是警察。根据应用的实例不同应用 wheel 组的方法也不同。这里对于服务器来说，我们希望的是剥夺被加入到 wheel 组用户以外的普通用户通过 su 命令来登录为 root 的机会（只有属于 wheel 组的用户才可以用 su 登录为 root）。这样就进一步增强了系统的安全性。</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">usermod -a -G wheel ryanpd5i</code></pre></li>\n<li><p>修改 <code>sudo</code> 的配置文件 <code>sudoers</code>。在 <code>/etc/sudoers</code> 文件中的 <code>root ALL=(ALL) ALL</code> 行后添加 <code>ryanpd5i ALL=(ALL) ALL</code> 。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 文件添加写权限\nchmod 640 &#x2F;etc&#x2F;sudoers\n\n# 在 root    ALL&#x3D;(ALL)     ALL 行后添加 ryanpd5i    ALL&#x3D;(ALL)     ALL\n\n# 执行 root 权限操作时不输入密码，不建议这样做\n# 将&#96;# %wheel    ALL&#x3D;(ALL)    NOPASSWD: ALL&#96; 一行中行首的 &#39;#&#39; 删除\n\n# 撤销文件写权限\nchmod 440 &#x2F;etc&#x2F;sudoers</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>生产环境建议指定具体目录或命令。例如：</p>\n<ul>\n<li><code>ryanpd5i ALL=(root) /mnt/sudodir</code> 目录 <strong>/mnt/sudodir</strong> 里面的程序 <code>ryanpd5i</code> 用户可以使用 root 权限（但是需要输入账户密码）来执行；</li>\n<li><code>ryanpd5i ALL=(root) NOPASSWD: /etc/ssh</code> 目录 <strong>/etc/ssh</strong> 里面的文件 <code>ryanpd5i</code> 用户可以使用 root 权限（不用输入账户密码）来读写；</li>\n</ul></blockquote>\n</li>\n</ol>\n<p>现在就可以使用 <code>sudo su -</code> 然后输入用户密码来使用 root 权限。</p>\n<h2 id=\"SSH-禁止-root-用户登录\"><a href=\"#SSH-禁止-root-用户登录\" class=\"headerlink\" title=\"SSH 禁止 root 用户登录\"></a>SSH 禁止 root 用户登录</h2><h3 id=\"阻止-root-用户通过-SSH-登录\"><a href=\"#阻止-root-用户通过-SSH-登录\" class=\"headerlink\" title=\"阻止 root 用户通过 SSH 登录\"></a>阻止 root 用户通过 SSH 登录</h3><p>阻止 root 用户使用 SSH 远程登录服务器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PermitRootLogin yes\n#bash\nsudo sed -i &#39;s&#x2F;#PermitRootLogin yes&#x2F;PermitRootLogin yes&#x2F;g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre>\n\n<h3 id=\"设定仅允许指定用户登录\"><a href=\"#设定仅允许指定用户登录\" class=\"headerlink\" title=\"设定仅允许指定用户登录\"></a>设定仅允许指定用户登录</h3><p>设置只允许指定用户登录服务器。注意：一旦开启这个参数，root 用户就不能使用 SSH 远程登录服务器，在 SSH 登录时会收到”Access denied”的提示。</p>\n<p>方法：在 <code>PasswordAuthentication yes</code> 行后添加 <code>AllowUsers ryanpd5i</code>。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sed -i &#39;&#x2F;^PasswordAuthentication yes&#x2F;aAllowUsers ryanpd5i&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre>\n\n<p>最后，重启 SSH 服务：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">service sshd restart</code></pre>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.zhihu.com/question/51746286/answer/127360329\">命令前加 sudo 执行和用真正的 root 用户执行有什么区别</a></li>\n</ul>\n","text":" Linux 账户下 root 账户属于超级用户，具有全权管理权，可以做任何事。如果误操作会产生很大的破坏性。如果被黑，对方得到 root 的权限就能够读取写入系统上的所有文件。为了避免这一现象，我们需要添加新的用户并赋予管理员权限。该用户想要获取 root 权限可以使用 sud...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%94%A8%E6%88%B7%E8%B5%8B%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90\"><span class=\"toc-text\">添加新用户赋管理员权限</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH-%E7%A6%81%E6%AD%A2-root-%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">SSH 禁止 root 用户登录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%98%BB%E6%AD%A2-root-%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87-SSH-%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">阻止 root 用户通过 SSH 登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E5%AE%9A%E4%BB%85%E5%85%81%E8%AE%B8%E6%8C%87%E5%AE%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">设定仅允许指定用户登录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}},"mapped":true,"prev_post":{"title":"Linux 系统服务器设置 SSH 密钥登录","uid":"96e91c457e2731962d3902abef5c9240","slug":"2020-11-12-Linux-系统服务器设置-SSH-密钥登录","date":"2020-11-12T10:52:36.000Z","updated":"2021-09-17T01:31:25.018Z","comments":true,"path":"api/articles/2020-11-12-Linux-系统服务器设置-SSH-密钥登录.json","keywords":null,"cover":[],"text":" Linux 系统服务器的 SSH 登录方式最常见的有两种：通过用户密码登录或者采用密钥对登录。其中使用用户密码方式登录，容易有密码被暴力破解的问题。为了安全，可以使用 1Password 密码生成器 生成长度 30 位，包含大小写字母、数字和符号的用户密码，并且定期更换密码，这...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}},"next_post":{"title":"文本处理 sed","uid":"a92869a2b48f0ffce8551661a1622e3c","slug":"2020-10-03-06_文本处理 sed","date":"2020-10-03T11:24:26.000Z","updated":"2021-09-17T01:31:25.018Z","comments":true,"path":"api/articles/2020-10-03-06_文本处理 sed.json","keywords":null,"cover":null,"text":"本章主要讲解 Shell 中最核心的文本处理三剑客之 sed 的用法。 sed 的工作模式基础介绍 sed(Stream Editor)：流编辑器。对标准输出或文件逐行进行处理。 语法格式| | 格式 || —— | ————————————- | ——————————- || ...","link":"","photos":[],"count_time":{"symbolsCount":"89k","symbolsTime":"1:20"},"categories":[{"name":"Linux","slug":"Linux","count":7,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":5,"path":"api/tags/Shell.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}}}