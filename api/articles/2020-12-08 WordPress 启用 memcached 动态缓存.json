{"title":"WordPress 启用 memcached 动态缓存","uid":"085ca9a0a7e76461327fa4a16d8a5f3f","slug":"2020-12-08 WordPress 启用 memcached 动态缓存","date":"2020-12-08T12:55:06.000Z","updated":"2021-08-28T16:49:26.490Z","comments":true,"path":"api/articles/2020-12-08 WordPress 启用 memcached 动态缓存.json","keywords":null,"cover":[],"content":"<p><img src=\"https://img.zxj.guru/2020/12/wordpress-memcached.png\" alt=\"wordpress-memcached\"></p>\n<p>WordPress 动态缓存加速方案：一种是基于 memcached 缓存动态内容，将数据库的数据缓存在内存中，下次需要的时候直接从内存中取数据，减少 MySQL 的访问次数，也加速了 WordPress 对网页的处理。这种方式直接从内存中存取数据，理论上比静态缓存的 IO 开销更小，但是由于 memcached 需要占用一定 php 资源，因此会对 CPU 带来一些额外的压力。</p>\n<p>另一种是基于 nginx 的 fastcgi 纯静态缓存，这是将所有的动态 HTML 页面都缓存到硬盘文件，nginx 针对 http 请求只处理静态内容，因此对服务器的开销很小，速度快。对于动态内容不多的站点，用这个方法能极大缓解 cpu 的负担，由 nginx 来高效地处理并发。</p>\n<h2 id=\"安装-memcached-服务\"><a href=\"#安装-memcached-服务\" class=\"headerlink\" title=\"安装 memcached 服务\"></a>安装 memcached 服务</h2><p><code>Memcached</code> 是一个高性能的分布式内存对象缓存系统，用于动态 Web 应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态、数据库驱动网站的速度。</p>\n<h3 id=\"memcache-or-memcached\"><a href=\"#memcache-or-memcached\" class=\"headerlink\" title=\"memcache or memcached\"></a>memcache or memcached</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>php memcache 拓展：<a href=\"http://cn2.php.net/manual/zh/book.memcache.php\">http://cn2.php.net/manual/zh/book.memcache.php</a></li>\n<li>php memcached 拓展：<a href=\"http://cn2.php.net/manual/zh/book.memcached.php\">http://cn2.php.net/manual/zh/book.memcached.php</a></li>\n</ul>\n<p>对于 php 而言就是两个不同的客户端库，memcache 是基于 pecl 扩展库写的，memcache 是基于 libmemcached 扩展库写的，两个库其实都是一堆写好的 c 代码编译成的动态链接库， memcached 里面多了一些方法，里面还多支持了几个协议。目前通常建议直接使用后者。</p>\n<p>PS：如果想更深入了解，可以搜索下 <code>memcache vs memcached</code></p></blockquote>\n<h3 id=\"安装-memcached\"><a href=\"#安装-memcached\" class=\"headerlink\" title=\"安装 memcached\"></a>安装 memcached</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里的 <code>memcached</code>是 <code>Mencached</code> 的服务端 <a href=\"http://danga.com/memcached\">memcached</a>，用来处理缓存数据。</p></blockquote>\n<h4 id=\"LNMP-环境\"><a href=\"#LNMP-环境\" class=\"headerlink\" title=\"LNMP 环境\"></a>LNMP 环境</h4><p>进入 lnmp 解压后的目录，执行：<code>./addons.sh install memcached</code></p>\n<p><img src=\"https://img.zxj.guru/2020/12/lnmp_install_memcached.png\" alt=\"lnmp_install_memcached\"></p>\n<p>输入对应的序号 <code>2</code>，回车，再次确认回车开始安装。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>卸载 <code>memcached</code> 执行：<code>./addons.sh uninstall memcached</code></p></blockquote>\n<h4 id=\"宝塔面板\"><a href=\"#宝塔面板\" class=\"headerlink\" title=\"宝塔面板\"></a>宝塔面板</h4><p>在<kbd>面板</kbd> - <kbd>软件商店</kbd> 中搜索 <code>mencached</code>，选择软件名称为 <code>Memcached</code> 的安装即可。为了安全起见建议选择编译安装。</p>\n<p><img src=\"https://img.zxj.guru/2020/12/bt_mencached.png\" alt=\"bt_mencached\"></p>\n<p>安装完成后修改相关配置文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#改为监听127.0.0.1，并关闭UDP连接方式，若为远程服务调用或不需要的话请跳过此行\nsed -i &#39;s&#x2F;OPTIONS&#x3D;&quot;&quot;&#x2F;OPTIONS&#x3D;&quot;-l 127.0.0.1 -U 0&quot;&#x2F;g&#39; &#x2F;etc&#x2F;init.d&#x2F;memcached\n\n#启动并设置开机服务\nchmod +x &#x2F;etc&#x2F;init.d&#x2F;memcached\nservice memcached start\nchkconfig --add memcached\nchkconfig memcached on</code></pre>\n\n<p>然后在 PHP 管理中安装 <code>memcached</code> 扩展。</p>\n<p><img src=\"https://img.zxj.guru/2020/12/bt_php_memcached.png\" alt=\"bt_php_memcached\"></p>\n<h3 id=\"校验安装\"><a href=\"#校验安装\" class=\"headerlink\" title=\"校验安装\"></a>校验安装</h3><p>检查一下 <code>memcached</code> 服务是否运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ systemctl status memcached\n● memcached.service - LSB: memcached - Memory caching daemon\n   Loaded: loaded (&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;memcached; bad; vendor preset: disabled)\n   Active: active (exited) since Sun 2020-12-08 21:02:18 CST; 5min ago</code></pre>\n\n<p>检查 <code>php-memcached</code> 扩展是否加载，如果输出 memcached 则表示成功。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ php -m | grep memcached\nmemcached</code></pre>\n\n<h3 id=\"测试缓存\"><a href=\"#测试缓存\" class=\"headerlink\" title=\"测试缓存\"></a>测试缓存</h3><p>如果能输出 <code>100 </code>表示 <code>memcached</code> 安装成功且正常运行。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cat &gt; test.php &lt;&lt;-EOF\n&lt;?php\n\\$m &#x3D; new Memcached();\n\\$m-&gt;addServer( &#39;127.0.0.1&#39;, 11211 );\n\\$m-&gt;set( &#39;foo&#39;, 100 );\necho \\$m-&gt;get( &#39;foo&#39; ) . &quot;\\n&quot;;\nEOF\nphp -f test.php &amp;&amp; rm -f test.php</code></pre>\n\n<h2 id=\"安装-WordPress-Memcached-插件\"><a href=\"#安装-WordPress-Memcached-插件\" class=\"headerlink\" title=\"安装 WordPress Memcached 插件\"></a>安装 WordPress Memcached 插件</h2><h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><ol>\n<li><p>访问 <a href=\"http://svn.wp-plugins.org/memcached-redux/trunk/\">memcached-redux/trunk</a> 页面下载 <code>object-cache.php</code> 上传到 <code>wp-content</code> 目录。</p>\n</li>\n<li><p>在网站根目录下的 <code>wp-config.php</code> 页面找到下面代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">#英文站点\n&#x2F;* That&#39;s all, stop editing! Happy blogging. *&#x2F;\n#中文站点\n&#x2F;* 好了！请不要再继续编辑。请保存本文件。使用愉快！ *&#x2F;</code></pre>\n\n<p>在该段代码上方添加 <code>WP_CACHE_KEY_SALT</code> 变量。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">define( &#39;WP_CACHE_KEY_SALT&#39;, &#39;...long random string...&#39; );\n#例如: 设置为域名\ndefine( &#39;WP_CACHE_KEY_SALT&#39;, &#39;www.zxj.guru&#39; );</code></pre>\n\n<p>当一台服务器安装多个 WordPress 站点使用 Memcached 时，这有助于防止缓存数据冲突。 对于每个 WordPress 站点，该值必须唯一。</p>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果发现页面可以打开，但是里面没有 Hits 数据，说明 WordPress 并没有成功连接到 memcached，我们需要手动指定 memcached 服务器：</p>\n<p>在网站根目录下的 <code>wp-config.php</code> 页面找到下面代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">#英文站点\n&#x2F;* That&#39;s all, stop editing! Happy blogging. *&#x2F;\n#中文站点\n&#x2F;* 好了！请不要再继续编辑。请保存本文件。使用愉快！ *&#x2F;</code></pre>\n\n<p>在该段代码上方添加</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$memcached_servers &#x3D; array(\n    &#39;default&#39; &#x3D;&gt; array(\n     &#x2F;&#x2F; 这里定义的是memcached服务器，一般我们是单机部署，所以注释掉一行，并将memcached监听IP和端口根据实际修改，比如本文是127.0.0.1\n        &#x2F;&#x2F; &#39;&lt;memcached监听IP&gt;:&lt;端口&gt;&#39;,\n        &#39;127.0.0.1:11211&#39;\n    )\n);</code></pre>\n\n<p>实际的 memcached 监听 IP 和端口，你可以通过如下命令查看：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ netstat -nutlp | grep memcache\ntcp        0      0 127.0.0.1:11211         0.0.0.0:*               LISTEN      3070&#x2F;memcached</code></pre></blockquote>\n<h3 id=\"查看效果\"><a href=\"#查看效果\" class=\"headerlink\" title=\"查看效果\"></a>查看效果</h3><p>查看 Memcached 状态：在 <kbd>WordPress 的仪表盘</kbd> → <kbd>工具</kbd> → <kbd>Memcached</kbd> 界面通过计算 cmd_get 和 get_hits 来计算命中率。</p>\n<p>图形化展示：</p>\n<ol>\n<li><p>下载 <a href=\"http://pecl.php.net/package/memcache\">PECL memcache extension</a>。（国内蓝奏云下载地址：<a href=\"https://jiea.lanzous.com/b01tttrja#ryan\">https://jiea.lanzous.com/b01tttrja#ryan</a>）</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>State</th>\n<th>Release Date</th>\n<th>Downloads</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://pecl.php.net/package/memcache/8.0\">8.0</a></td>\n<td>stable</td>\n<td>2020-12-06</td>\n<td><a href=\"http://pecl.php.net/get/memcache-8.0.tgz\">memcache-8.0.tgz</a> (76.6kB)</td>\n</tr>\n<tr>\n<td><a href=\"http://pecl.php.net/package/memcache/4.0.5.2\">4.0.5.2</a></td>\n<td>stable</td>\n<td>2019-12-20</td>\n<td><a href=\"http://pecl.php.net/get/memcache-4.0.5.2.tgz\">memcache-4.0.5.2.tgz</a> (73.3kB) <a href=\"http://pecl.php.net/package/memcache/4.0.5.2/windows\"><img src=\"https://img.zxj.guru/2020/12/windows-icon.png\" alt=\"windows\">DLL</a></td>\n</tr>\n<tr>\n<td><a href=\"http://pecl.php.net/package/memcache/4.0.5.1\">4.0.5.1</a></td>\n<td>stable</td>\n<td>2019-12-19</td>\n<td><a href=\"http://pecl.php.net/get/memcache-4.0.5.1.tgz\">memcache-4.0.5.1.tgz</a> (73.3kB) <a href=\"http://pecl.php.net/package/memcache/4.0.5.1/windows\"><img src=\"https://img.zxj.guru/2020/12/windows-icon.png\" alt=\"windows\">DLL</a></td>\n</tr>\n<tr>\n<td><a href=\"http://pecl.php.net/package/memcache/3.0.8\">3.0.8</a></td>\n<td>beta</td>\n<td>2013-04-07</td>\n<td><a href=\"http://pecl.php.net/get/memcache-3.0.8.tgz\">memcache-3.0.8.tgz</a> (68.9kB) <a href=\"http://pecl.php.net/package/memcache/3.0.8/windows\"><img src=\"https://img.zxj.guru/2020/12/windows-icon.png\" alt=\"windows\">DLL</a></td>\n</tr>\n</tbody></table>\n</li>\n<li><p>解压 <code>memcache-8.0.tgz</code>，找到 <code>memcache.php</code> 文件。</p>\n</li>\n<li><p>找到下面代码编辑，在文件 22-29 行左右。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">define(&#39;ADMIN_USERNAME&#39;,&#39;memcache&#39;);     &#x2F;&#x2F; Admin Username\ndefine(&#39;ADMIN_PASSWORD&#39;,&#39;password&#39;);      &#x2F;&#x2F; Admin Password\ndefine(&#39;DATE_FORMAT&#39;,&#39;Y&#x2F;m&#x2F;d H:i:s&#39;);\ndefine(&#39;GRAPH_SIZE&#39;,200);\ndefine(&#39;MAX_ITEM_DUMP&#39;,50);\n\n$MEMCACHE_SERVERS[] &#x3D; &#39;mymemcache-server1:11211&#39;; &#x2F;&#x2F; add more as an array\n$MEMCACHE_SERVERS[] &#x3D; &#39;mymemcache-server2:11211&#39;; &#x2F;&#x2F; add more as an array</code></pre>\n\n<p>修改为</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">define(&#39;ADMIN_USERNAME&#39;,&#39;LzB9j5rZgB&#39;);     &#x2F;&#x2F; 登录名自行修改\ndefine(&#39;ADMIN_PASSWORD&#39;,&#39;6bUn@YgiG4xre$f9pNQMNkpQSFf$DS&#39;);      &#x2F;&#x2F; 密码自行修改\ndefine(&#39;DATE_FORMAT&#39;,&#39;Y&#x2F;m&#x2F;d H:i:s&#39;);\ndefine(&#39;GRAPH_SIZE&#39;,200);\ndefine(&#39;MAX_ITEM_DUMP&#39;,50);\n\n&#x2F;&#x2F; 这里定义的是 memcached 服务器，一般我们是单机部署，所以注释掉一行，并将 memcached 监听 IP 和端口根据实际修改\n$MEMCACHE_SERVERS[] &#x3D; &#39;127.0.0.1:11211&#39;; &#x2F;&#x2F; add more as an array\n&#x2F;&#x2F;$MEMCACHE_SERVERS[] &#x3D; &#39;mymemcache-server2:11211&#39;; &#x2F;&#x2F; add more as an array</code></pre>\n\n<blockquote>\n<p>实际的 memcached 监听 IP 和端口，你可以通过如下命令查看：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ netstat -nutlp | grep memcache\ntcp        0      0 127.0.0.1:11211         0.0.0.0:*               LISTEN      3070&#x2F;memcached</code></pre></blockquote>\n</li>\n<li><p>上传到网站私密目录（临时测试可以放到根目录），然后通过前台访问 <code>memcache.php</code> 文件，输入上面的用户名和密码即可看到 memcached 状态：</p>\n</li>\n</ol>\n<h2 id=\"纯静态缓存\"><a href=\"#纯静态缓存\" class=\"headerlink\" title=\"纯静态缓存\"></a>纯静态缓存</h2><p>目前已经完成了数据库查询的动态缓存，如果想要进一步提高性能将网站的页面静态化，存储在 memcached 分配的内存中，可以使用 WordPress 插件 <a href=\"https://wordpress.org/plugins/batcache\">Batcache</a>。</p>\n<h3 id=\"安装-Batcache-插件\"><a href=\"#安装-Batcache-插件\" class=\"headerlink\" title=\"安装 Batcache 插件\"></a>安装 Batcache 插件</h3><ol>\n<li><p>在 WordPress 插件市场下载 <a href=\"https://wordpress.org/plugins/batcache\">Batcache</a>。</p>\n</li>\n<li><p>解压下载的 <code>batcache.1.5.zip</code> 。（或者直接从 <a href=\"http://svn.wp-plugins.org/batcache/trunk/\">batcache/trunk</a> 页面下载）</p>\n</li>\n<li><p>将 <code>advanced-cache.php</code> 文件上传到 <code>/wp-content/</code> 目录。</p>\n</li>\n<li><p>在 <code>wp-config.php</code> 文件中添加 <code>define(&#39;WP_CACHE&#39;, true);</code> 激活 Batcache 插件；</p>\n</li>\n<li><p>在浏览器中将网站的某个页面刷新几次，在开发者工具源码页，在 <code>&lt;/head&gt;</code> 结束标签上方可以看到 Batcache 的状态。</p>\n</li>\n<li><p>在 <code>advanced-cache.php</code>文件中调整相关参数，大概在文件 43-49 行左右。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">var $max_age &#x3D;  300; &#x2F;&#x2F; Expire batcache items aged this many seconds (zero to disable batcache)\nvar $remote  &#x3D;    0; &#x2F;&#x2F; Zero disables sending buffers to remote datacenters (req&#x2F;sec is never sent)\nvar $times   &#x3D;    2; &#x2F;&#x2F; Only batcache a page after it is accessed this many times... (two or more)\nvar $seconds &#x3D;  120; &#x2F;&#x2F; ...in this many seconds (zero to ignore this and use batcache immediately)</code></pre>\n\n<p><code>max_age</code> 代表缓存过期时间（以秒为单位），<code>times</code> 表示访问多少次才创建缓存（2 是最小值），<code>seconds</code> 表示在多少秒之后才创建缓存（0 表示立即）。</p>\n<p>修改为：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">var $max_age &#x3D;  3600;\nvar $remote  &#x3D;    0;\nvar $times   &#x3D;    2;\nvar $seconds &#x3D;  120;</code></pre>\n\n<p>将缓存有效期设为 <code>3600</code> 秒，也就是过 1 小时后缓存将重新生成。在 120 秒内，连续访问该页面 2 次将生成缓存。具体数字可以根据实际情况修改。</p>\n</li>\n<li><p>（可选）将 <code>batcache.php</code> 上传到 <code>/wp-content/plugins/</code> 网站插件目录。</p>\n</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://zhang.ge/5097.html\">WordPress 启用 memcached 动态缓存以及报错解决</a></li>\n<li><a href=\"https://wordpress.org/plugins/memcached/#installation\">Memcached Object Cache – installation</a></li>\n<li><a href=\"https://wordpress.org/plugins/batcache/#installation\">Batcache – installation</a></li>\n</ul>\n","text":" WordPress 动态缓存加速方案：一种是基于 memcached 缓存动态内容，将数据库的数据缓存在内存中，下次需要的时候直接从内存中取数据，减少 MySQL 的访问次数，也加速了 WordPress 对网页的处理。这种方式直接从内存中存取数据，理论上比静态缓存的 IO 开...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"WordPress","slug":"WordPress","count":3,"path":"api/categories/WordPress.json"}],"tags":[{"name":"WordPress","slug":"WordPress","count":3,"path":"api/tags/WordPress.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-memcached-%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">安装 memcached 服务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#memcache-or-memcached\"><span class=\"toc-text\">memcache or memcached</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-memcached\"><span class=\"toc-text\">安装 memcached</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#LNMP-%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">LNMP 环境</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF\"><span class=\"toc-text\">宝塔面板</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%A1%E9%AA%8C%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">校验安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">测试缓存</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-WordPress-Memcached-%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装 WordPress Memcached 插件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装插件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">查看效果</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%AF%E9%9D%99%E6%80%81%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">纯静态缓存</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-Batcache-%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装 Batcache 插件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"JaimeZeng","slug":"blog-author","avatar":"/icon/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"免费组队领取堡塔企业级备份插件","uid":"9d7117cb9623769990b3cb6113e1cf49","slug":"2020-12-18-免费组队领取堡塔企业级备份插件","date":"2020-12-18T15:03:56.000Z","updated":"2021-08-28T16:49:26.490Z","comments":true,"path":"api/articles/2020-12-18-免费组队领取堡塔企业级备份插件.json","keywords":null,"cover":[],"text":"免费组队领取堡塔企业级备份插件，队伍人数需要满 5 人，满员后组队关闭且立即发放插件抵扣券。插件抵扣券查看地址 插件介绍官方介绍：堡塔企业级备份 活动地址 活动地址：https://www.bt.cn/freegroup1 队伍地址：https://www.bt.cn/freeg...","link":"","photos":[],"count_time":{"symbolsCount":529,"symbolsTime":"1 mins."},"categories":[{"name":"活动","slug":"活动","count":3,"path":"api/categories/活动.json"}],"tags":[{"name":"活动","slug":"活动","count":3,"path":"api/tags/活动.json"},{"name":"宝塔面板","slug":"宝塔面板","count":2,"path":"api/tags/宝塔面板.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"/icon/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"免费组队领取堡塔 APP 插件","uid":"09d4cfde756ba313f2558404320a1b58","slug":"2020-12-05-免费组队领取堡塔APP插件","date":"2020-12-05T14:11:10.000Z","updated":"2021-08-28T16:49:26.490Z","comments":true,"path":"api/articles/2020-12-05-免费组队领取堡塔APP插件.json","keywords":null,"cover":[],"text":"免费组队领取堡塔 APP 插件，队伍人数需要满 5 人，满员后组队关闭且立即发放插件抵扣券。插件抵扣券查看地址 插件介绍官方介绍：堡塔 App 活动地址 活动地址：https://www.bt.cn/freegroup 队伍地址：https://www.bt.cn/freegro...","link":"","photos":[],"count_time":{"symbolsCount":526,"symbolsTime":"1 mins."},"categories":[{"name":"活动","slug":"活动","count":3,"path":"api/categories/活动.json"}],"tags":[{"name":"活动","slug":"活动","count":3,"path":"api/tags/活动.json"},{"name":"宝塔面板","slug":"宝塔面板","count":2,"path":"api/tags/宝塔面板.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"/icon/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}