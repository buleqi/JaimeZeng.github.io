{"title":"qinglong 青龙面板安装配置","uid":"58ba0b1f668d7f9d0a6e93511ba031d3","slug":"2021-08-02-qinglong-青龙面板安装配置","date":"2021-08-02T08:10:03.000Z","updated":"2021-09-22T18:02:07.837Z","comments":true,"path":"api/articles/2021-08-02-qinglong-青龙面板安装配置.json","keywords":null,"cover":[],"content":"<h2 id=\"安装青龙\"><a href=\"#安装青龙\" class=\"headerlink\" title=\"安装青龙\"></a>安装青龙</h2><p><a href=\"https://github.com/whyour/qinglong\"><img src=\"https://github-readme-stats.vercel.app/api/pin/?username=whyour&repo=qinglong&show_owner=true&theme=dracula\" alt=\"qinglong\"></a></p>\n<ul>\n<li>Github: <a href=\"https://github.com/whyour/qinglong\">whyour/qinglong</a></li>\n<li>DockerHub: <a href=\"https://hub.docker.com/r/whyour/qinglong\">whyour/qinglong</a></li>\n</ul>\n<h3 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 切换管理员\nsudo su -\n\n# 安装 docker-ce\ncurl -fsSL https:&#x2F;&#x2F;get.docker.com | bash -s docker --mirror Aliyun\n\n# 国内镜像\nmkdir -p &#x2F;etc&#x2F;docker\ncat &gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF\n&#123;\n  &quot;registry-mirrors&quot;: [\n      &quot;http:&#x2F;&#x2F;hub-mirror.c.163.com&quot;,\n      &quot;https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&quot;\n  ]\n&#125;\nEOF\n\n# 创建 docker 工作组\ngroupadd docker\n\n# 添加用户到 docker 工作组\ngpasswd -a $&#123;USER&#125; docker\n\n# 启动 Docker 并加入开机启动项\nsystemctl daemon-reload\nsystemctl enable docker\nsystemctl restart docker\n\n# 校验 docker\ndocker version</code></pre>\n\n<h3 id=\"安装青龙-1\"><a href=\"#安装青龙-1\" class=\"headerlink\" title=\"安装青龙\"></a>安装青龙</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 拉取镜像\ndocker pull whyour&#x2F;qinglong:latest\n\n# 启动容器\n## 普通服务器\ndocker run -dit \\\n  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \\\n  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \\\n  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \\\n  -v $PWD&#x2F;ql&#x2F;repo:&#x2F;ql&#x2F;repo \\\n  -v $PWD&#x2F;ql&#x2F;raw:&#x2F;ql&#x2F;raw \\\n  -v $PWD&#x2F;ql&#x2F;scripts:&#x2F;ql&#x2F;scripts \\\n  -v $PWD&#x2F;ql&#x2F;jbot:&#x2F;ql&#x2F;jbot \\\n  -p 5700:5700 \\\n  -e ENABLE_HANGUP&#x3D;true \\\n  -e ENABLE_TG_BOT&#x3D;true \\\n  -e ENABLE_WEB_PANEL&#x3D;true \\\n  -e TZ&#x3D;CST-8 \\\n  --name qinglong \\\n  --hostname qinglong \\\n  --restart always \\\n  whyour&#x2F;qinglong:latest\n## N1 等路由器\ndocker run -dit \\\n  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \\\n  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \\\n  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \\\n  -v $PWD&#x2F;ql&#x2F;repo:&#x2F;ql&#x2F;repo \\\n  -v $PWD&#x2F;ql&#x2F;raw:&#x2F;ql&#x2F;raw \\\n  -v $PWD&#x2F;ql&#x2F;scripts:&#x2F;ql&#x2F;scripts \\\n  -v $PWD&#x2F;ql&#x2F;jbot:&#x2F;ql&#x2F;jbot \\\n  -e ENABLE_HANGUP&#x3D;true \\\n  -e ENABLE_TG_BOT&#x3D;true \\\n  -e ENABLE_WEB_PANEL&#x3D;true \\\n  -e TZ&#x3D;CST-8 \\\n  --net host \\\n  --name qinglong \\\n  --hostname qinglong \\\n  --restart always \\\n  whyour&#x2F;qinglong:latest\n## MacVlan 方式\ndocker run -dit \\\n  --name qinglong \\\n  --hostname qinglong \\\n  --restart always \\\n  --net&#x3D;macnet \\\n  --ip&#x3D;192.168.2.20 \\\n  --dns&#x3D;192.168.2.2 \\\n  --mac-address C2:F2:9C:C5:B1:01 \\\n  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \\\n  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \\\n  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \\\n  -v $PWD&#x2F;ql&#x2F;repo:&#x2F;ql&#x2F;repo \\\n  -v $PWD&#x2F;ql&#x2F;raw:&#x2F;ql&#x2F;raw \\\n  -v $PWD&#x2F;ql&#x2F;scripts:&#x2F;ql&#x2F;scripts \\\n  -v $PWD&#x2F;ql&#x2F;jbot:&#x2F;ql&#x2F;jbot \\\n  -e ENABLE_HANGUP&#x3D;true \\\n  -e ENABLE_TG_BOT&#x3D;true \\\n  -e ENABLE_WEB_PANEL&#x3D;true \\\n  -e TZ&#x3D;CST-8 \\\n  whyour&#x2F;qinglong:latest\n\n# 修改密码\n## 服务器防火墙放行 5700 端口 (如果是国内云主机，还需要到云服务商安全组 &#x2F; 外网防火墙处放行 5700 端口)\n## 访问 http:&#x2F;&#x2F;ip:5700 ，使用 admin&#x2F;adminadmin 登录，网页会提示已初始化密码，使用以下命令获取新密码\ndocker exec -it qinglong cat &#x2F;ql&#x2F;config&#x2F;auth.json\n## 登录面板之后修改用户名和密码即可</code></pre>\n\n<h3 id=\"青龙基本命令\"><a href=\"#青龙基本命令\" class=\"headerlink\" title=\"青龙基本命令\"></a>青龙基本命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 进入容器\ndocker exec -it qinglong bash\n# 更新青龙\ndocker exec -it qinglong ql update\n# 更新青龙并编译\ndocker exec -it qinglong ql restart\n# 拉取自定义仓库\ndocker exec -it qinglong ql repo https:&#x2F;&#x2F;github.com&#x2F;whyour&#x2F;hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;\n# 拉取单个脚本\ndocker exec -it qinglong ql raw https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;moposmall&#x2F;Script&#x2F;main&#x2F;Me&#x2F;jx_cfd.js\n# 导出互助码\ndocker exec -it qinglong ql code\n# 删除 7 天前的所有日志\ndocker exec -it qinglong ql rmlog 7\n# 启动 bot\ndocker exec -it qinglong ql bot\n# 通知测试\ndocker exec -it qinglong notify test test\n# 立即执行脚本\ndocker exec -it qinglong task test.js now\n# 并行执行脚本\ndocker exec -it qinglong task test.js conc</code></pre>\n\n<h2 id=\"配置青龙\"><a href=\"#配置青龙\" class=\"headerlink\" title=\"配置青龙\"></a>配置青龙</h2><p><a href=\"https://github.com/Oreomeow/VIP\"><img src=\"https://github-readme-stats.vercel.app/api/pin/?username=Oreomeow&repo=VIP&show_owner=true&theme=dracula\" alt=\"VIP\"></a></p>\n<h3 id=\"设置环境变量\"><a href=\"#设置环境变量\" class=\"headerlink\" title=\"设置环境变量\"></a>设置环境变量</h3><p>面板左侧环境变量管理添加，名称写 <code>JD_COOKIE</code>，值填你自己的 <code>cookie</code>，多个账户之间使用 <code>&amp;</code> 连接。</p>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># @Oreomeow 大佬提供\ndocker exec -it qinglong bash\npackage_name&#x3D;&quot;canvas png-js date-fns axios crypto-js ts-md5 tslib @types&#x2F;node dotenv typescript fs require tslib&quot;\ninstall_dependencies_normal()&#123;\n    for i in $@; do\n        case $i in\n            canvas)\n                cd &#x2F;ql&#x2F;scripts\n                if [[ &quot;$(echo $(npm ls $i) | grep ERR)&quot; !&#x3D; &quot;&quot; ]]; then\n                    npm uninstall $i\n                fi\n                if [[ &quot;$(npm ls $i)&quot; &#x3D;~ (empty) ]]; then\n                    apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; npm i $i --prefix &#x2F;ql&#x2F;scripts --build-from-source\n                fi\n                ;;\n            *)\n                if [[ &quot;$(npm ls $i)&quot; &#x3D;~ $i ]]; then\n                    npm uninstall $i\n                elif [[ &quot;$(echo $(npm ls $i -g) | grep ERR)&quot; !&#x3D; &quot;&quot; ]]; then\n                    npm uninstall $i -g\n                fi\n                if [[ &quot;$(npm ls $i -g)&quot; &#x3D;~ (empty) ]]; then\n                    [[ $i &#x3D; &quot;typescript&quot; ]] &amp;&amp; npm i $i -g --force || npm i $i -g\n                fi\n                ;;\n        esac\n    done\n&#125;\ninstall_dependencies_normal $package_name</code></pre>\n\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><ul>\n<li><a href=\"https://raw.githubusercontent.com/Oreomeow/VIP/main/Scripts/sh/Helpcode2.8/config_sample.sh\">config_sample.sh</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker exec -it qinglong bash\ncd &#x2F;ql&#x2F;config\nmv config.sh config.sh.bak\ncurl -s -o &quot;config.sh&quot; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Oreomeow&#x2F;VIP&#x2F;main&#x2F;Scripts&#x2F;sh&#x2F;Helpcode2.8&#x2F;config_sample.sh\n\n# 在 vim &#x2F; 面板中编辑 code.sh 文件，根据提示修改即可。</code></pre>\n\n<p>在面板中编辑 config.sh 文件，参考 <a href=\"https://github.com/Oreomeow/VIP/blob/main/Conf/Readme.md\">常用环境变量备份表</a> 修改相关变量。</p>\n<h3 id=\"拉库\"><a href=\"#拉库\" class=\"headerlink\" title=\"拉库\"></a>拉库</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 收集全网目前能正常使用的脚本\nql repo https:&#x2F;&#x2F;github.com&#x2F;shufflewzc&#x2F;faker2.git &quot;jd_|jx_|gua_|jddj_|getJDCookie&quot; &quot;activity|backUp|Coupon|update&quot; &quot;^jd[^_]|USER|utils|function|^JS|^TS|^JDJRValidator_Pure|^ZooFaker|^sign|ql&quot;\n# 无内置 shareCodes，使用助力池，新脚本使用 TypeScript\nql repo https:&#x2F;&#x2F;github.com&#x2F;JDHelloWorld&#x2F;jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|Coupon|enen|update|test&quot; &quot;^jd[^_]|USER|^TS|utils|notify|env|package|ken.js&quot;\n# 自动互助、提交助力码，随机从数据库中选取助力码互助\nql repo https:&#x2F;&#x2F;github.com&#x2F;he1pu&#x2F;JDHelp.git &quot;jd_|jx_|getJDCookie&quot; &quot;Coupon|update&quot; &quot;^jd[^_]|USER|^sign|^ZooFaker|utils&quot;\n# 收集全网目前能正常使用的脚本\nql repo https:&#x2F;&#x2F;github.com&#x2F;yuannian1112&#x2F;jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils&quot;\n# 仓库脚本已内置远程助力地址和助力码\nql repo https:&#x2F;&#x2F;github.com&#x2F;Aaron-lv&#x2F;sync.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|Coupon&quot; &quot;^jd[^_]|USER|utils&quot; &quot;jd_scripts&quot;\n# 自动检测账号是否正常，不正常的自动禁用，正常的如果是禁用状态则自动启用.\nql repo https:&#x2F;&#x2F;github.com&#x2F;ccwav&#x2F;QLScript.git &quot;jd_&quot; &quot;sendNotify.js&quot; &quot;ql.js&quot;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>定时更新仓库（以 faker2 仓库为例）</p>\n<p>面板中 <kbd> 定时任务 </kbd> -&gt; <kbd > 添加定时 </kbd></p>\n<ul>\n<li>名称: <code>定时更新仓库</code></li>\n<li>命令: <code>ql extra</code></li>\n<li>定时规则: <code>0 */2 * * *</code></li>\n</ul>\n<p>点击 <kbd> 确定 </kbd > 即可，程序会每隔 2 小时自动更新仓库。</p></blockquote>\n<h3 id=\"自动更新助力码\"><a href=\"#自动更新助力码\" class=\"headerlink\" title=\"自动更新助力码\"></a>自动更新助力码</h3><ul>\n<li><a href=\"https://raw.githubusercontent.com/Oreomeow/VIP/main/Scripts/sh/Helpcode2.8/code.sh\">code.sh</a></li>\n<li><a href=\"https://raw.githubusercontent.com/Oreomeow/VIP/main/Scripts/sh/Helpcode2.8/task_before.sh\">task_before.sh</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker exec -it qinglong bash\ncd &#x2F;ql&#x2F;config\nmv code.sh code.sh.bak\nmv task_before.sh task_before.sh.bak\ncurl -s -o &quot;code.sh&quot; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Oreomeow&#x2F;VIP&#x2F;main&#x2F;Scripts&#x2F;sh&#x2F;Helpcode2.8&#x2F;code.sh\ncurl -s -o &quot;task_before&quot; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Oreomeow&#x2F;VIP&#x2F;main&#x2F;Scripts&#x2F;sh&#x2F;Helpcode2.8&#x2F;task_before.sh\n\n# 在 vim &#x2F; 面板中编辑 code.sh 文件，根据提示修改即可。\n## 修改预设的仓库，默认调用 shufflewzc_faker2 仓库\n## 修改互助码模板样式，默认所有账号均等助力</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>必读一：<br>名称：<code>格式化更新互助码</code><br>命令：<code>task /ql/config/code.sh</code><br>定时规则：<code>10 * * * *</code></p>\n<p>必读二：<br>互助码和互助规则文件路径调整至 <code>/ql/log/.ShareCode</code>；备份路径调整至 <code>/ql/log/.bak_ShareCode/</code>。<br>这两个文件夹会自动创建。可以 <code>通过面板</code> - <code>任务日志</code> 查看。</p>\n<p>必读三：<br>task_before.sh 不再负责互助码和互助规则的导入，只负责读取 <code>/ql/log/.ShareCode</code> 的文件并格式化成全局互助变量提交给活动脚本。</p>\n<p>必读四：<br>code.sh 和 task_before.sh 还是仍旧存放在 <code>/ql/config/</code> 路径不变。</p>\n<p>必读五：<br>目前，尝鲜版 code.sh 或 task_before.sh 仍旧不包含新算法助力规则和全局变量自截断的代码，所以并不能解决 <code>Argument list too long</code> 的问题。如果账号过多提示这个报错，建议分多容器运行。</p></blockquote>\n<h3 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h3><p>所有数据都将保存当前目录下的 ql 文件夹中，如需要备份，请直接备份 ql 文件夹即可。</p>\n","text":"安装青龙 Github: whyour/qinglong DockerHub: whyour/qinglong 安装 Docker# 切换管理员 sudo su - # 安装 docker-ce curl -fsSL https:&#x2F;&#x2F;get.docker.co...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"CentOS","slug":"CentOS","count":5,"path":"api/categories/CentOS.json"}],"tags":[{"name":"CentOS","slug":"CentOS","count":5,"path":"api/tags/CentOS.json"},{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99\"><span class=\"toc-text\">安装青龙</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-Docker\"><span class=\"toc-text\">安装 Docker</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99-1\"><span class=\"toc-text\">安装青龙</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%92%E9%BE%99%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">青龙基本命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E9%9D%92%E9%BE%99\"><span class=\"toc-text\">配置青龙</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">设置环境变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">安装依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">修改配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%BA%93\"><span class=\"toc-text\">拉库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%8A%A9%E5%8A%9B%E7%A0%81\"><span class=\"toc-text\">自动更新助力码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%87%E4%BB%BD\"><span class=\"toc-text\">备份</span></a></li></ol></li></ol>","author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}},"mapped":true,"prev_post":{"title":"提升 Chrome 下载速度","uid":"3fc8dda71e145f0887c22ad3b9f5087b","slug":"2021-08-05-提升-Chrome-下载速度","date":"2021-08-05T06:30:21.000Z","updated":"2021-09-22T18:02:07.837Z","comments":true,"path":"api/articles/2021-08-05-提升-Chrome-下载速度.json","keywords":null,"cover":[],"text":"使用浏览器下载文件时，下载速度不理想。原因是 Chrome 默认采用单线程下载。所以浏览器想要提高下载速度，就需要采用多线程的下载方式。 Chrome 的多线程下载。 优点：简单便捷，不用安装软件。 缺点：可以提升 Chrome 下载速度，但是大多数情况下不能满速下载。 使用 A...","link":"","photos":[],"count_time":{"symbolsCount":974,"symbolsTime":"1 mins."},"categories":[{"name":"Software","slug":"Software","count":4,"path":"api/categories/Software.json"}],"tags":[{"name":"Chrome","slug":"Chrome","count":1,"path":"api/tags/Chrome.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}},"next_post":{"title":"SQL 练习 17 - 获取当前薪水第二多的员工的 emp_no 以及其对应的薪水 salary","uid":"f84f6c3c498bfb6acaafe6ca5d401094","slug":"2021-04-10-SQL 练习 17 - 获取当前薪水第二多的员工的 emp_no 以及其对应的薪水 salary","date":"2021-04-10T06:30:21.000Z","updated":"2021-09-22T18:02:07.837Z","comments":true,"path":"api/articles/2021-04-10-SQL 练习 17 - 获取当前薪水第二多的员工的 emp_no 以及其对应的薪水 salary.json","keywords":null,"cover":null,"text":"题目 题目链接：获取当前薪水第二多的员工的emp_no以及其对应的薪水salary 有一个薪水表 salaries 简况如下： 建表及插入数据语句如下： drop table if exists &#96;salaries&#96;; CREATE TABLE &#96;sala...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"SQL","slug":"SQL","count":16,"path":"api/categories/SQL.json"}],"tags":[{"name":"SQL","slug":"SQL","count":16,"path":"api/tags/SQL.json"}],"author":{"name":"JaimeZeng","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/JaimeZeng/cdn/main/blog/avatar.png","link":"/","description":"Stay Simple.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":"https://github.com/JaimeZeng"}}}}}